{"ast":null,"code":"var _jsxFileName = \"/Users/simrit/Desktop/technical-assignment/src/components/table.tsx\";\nimport * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BasicTable() {\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Dessert (100g serving)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Fat\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Carbs\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Protein\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.calories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.fat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.carbs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.protein\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","BasicTable","minWidth","rows","map","row","border","name","calories","fat","carbs","protein"],"sources":["/Users/simrit/Desktop/technical-assignment/src/components/table.tsx"],"sourcesContent":["import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\n\nexport default function BasicTable() {\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Dessert (100g serving)</TableCell>\n            <TableCell align=\"right\">Calories</TableCell>\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow\n              key={row.name}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n              <TableCell align=\"right\">{row.carbs}</TableCell>\n              <TableCell align=\"right\">{row.protein}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAGA,eAAe,SAASC,UAAT,GAAsB;EACnC,oBACE,QAAC,cAAD;IAAgB,SAAS,EAAED,KAA3B;IAAA,uBACE,QAAC,KAAD;MAAO,EAAE,EAAE;QAAEE,QAAQ,EAAE;MAAZ,CAAX;MAA8B,cAAW,cAAzC;MAAA,wBACE,QAAC,SAAD;QAAA,uBACE,QAAC,QAAD;UAAA,wBACE,QAAC,SAAD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,SAAD;YAAW,KAAK,EAAC,OAAjB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE,QAAC,SAAD;YAAW,KAAK,EAAC,OAAjB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE,QAAC,SAAD;YAAW,KAAK,EAAC,OAAjB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJF,eAKE,QAAC,SAAD;YAAW,KAAK,EAAC,OAAjB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QALF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAUE,QAAC,SAAD;QAAA,UACGC,IAAI,CAACC,GAAL,CAAUC,GAAD,iBACR,QAAC,QAAD;UAEE,EAAE,EAAE;YAAE,oCAAoC;cAAEC,MAAM,EAAE;YAAV;UAAtC,CAFN;UAAA,wBAIE,QAAC,SAAD;YAAW,SAAS,EAAC,IAArB;YAA0B,KAAK,EAAC,KAAhC;YAAA,UACGD,GAAG,CAACE;UADP;YAAA;YAAA;YAAA;UAAA,QAJF,eAOE,QAAC,SAAD;YAAW,KAAK,EAAC,OAAjB;YAAA,UAA0BF,GAAG,CAACG;UAA9B;YAAA;YAAA;YAAA;UAAA,QAPF,eAQE,QAAC,SAAD;YAAW,KAAK,EAAC,OAAjB;YAAA,UAA0BH,GAAG,CAACI;UAA9B;YAAA;YAAA;YAAA;UAAA,QARF,eASE,QAAC,SAAD;YAAW,KAAK,EAAC,OAAjB;YAAA,UAA0BJ,GAAG,CAACK;UAA9B;YAAA;YAAA;YAAA;UAAA,QATF,eAUE,QAAC,SAAD;YAAW,KAAK,EAAC,OAAjB;YAAA,UAA0BL,GAAG,CAACM;UAA9B;YAAA;YAAA;YAAA;UAAA,QAVF;QAAA,GACON,GAAG,CAACE,IADX;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD;KAhCuBN,U"},"metadata":{},"sourceType":"module"}