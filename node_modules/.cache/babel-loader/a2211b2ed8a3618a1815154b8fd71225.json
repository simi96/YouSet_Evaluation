{"ast":null,"code":"export const rows = [{\n  id: 1,\n  pid: 'Package#1',\n  name: 'Proteco Insurance',\n  desc: 'Our most affordable package. Your personal belongings will be covered up to 15k$. This is perfect if you own a few belongings.',\n  price: '12.50$'\n}, {\n  id: 2,\n  pid: 'Package#2',\n  name: 'Umbrella Insurance',\n  desc: 'Our most popular package. Your personal belongings will be covered up to 30k$. This package also includes a free water sensor to detect a water leak in your home.',\n  price: '35.73$'\n}, {\n  id: 3,\n  pid: 'Package#3',\n  name: 'Thor Insurance',\n  desc: 'Nothing but the best. Your personal belongings will be covered up to 100k$. It even includes a protection against an alien invasion.',\n  price: '79.30$'\n}];\nexport const columns = [{\n  field: 'pid',\n  headerName: ''\n}, {\n  field: 'name',\n  headerName: 'Insurer Name'\n}, {\n  field: 'desc',\n  headerName: 'Description'\n}, {\n  field: 'price',\n  headerName: 'Price / month'\n}];\nexport const minAge = 0;\nexport const maxAge = 100;\nexport const userInfo = {\n  'email': '',\n  'age': minAge,\n  'gender': ''\n};\nexport const errorInfo = {\n  'emailError': false,\n  'ageError': false\n};\nexport function validEmail(emailId) {\n  let validId;\n  let regexp = new RegExp('/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/');\n  validId = regexp.test(emailId);\n  console.log(emailId);\n  return emailId;\n}","map":{"version":3,"names":["rows","id","pid","name","desc","price","columns","field","headerName","minAge","maxAge","userInfo","errorInfo","validEmail","emailId","validId","regexp","RegExp","test","console","log"],"sources":["/Users/simrit/Desktop/technical-assignment/src/constants.tsx"],"sourcesContent":["export const rows = [\n    { id: 1, pid: 'Package#1' , name: 'Proteco Insurance', desc: 'Our most affordable package. Your personal belongings will be covered up to 15k$. This is perfect if you own a few belongings.', price: '12.50$' },\n    { id: 2, pid: 'Package#2', name: 'Umbrella Insurance', desc: 'Our most popular package. Your personal belongings will be covered up to 30k$. This package also includes a free water sensor to detect a water leak in your home.', price: '35.73$' },\n    { id: 3, pid: 'Package#3',  name: 'Thor Insurance', desc: 'Nothing but the best. Your personal belongings will be covered up to 100k$. It even includes a protection against an alien invasion.', price: '79.30$' },\n  ];\n\nexport const columns =  [\n    { field: 'pid', headerName: ''},\n    { field: 'name', headerName: 'Insurer Name'},\n    { field: 'desc', headerName: 'Description'},\n    { field: 'price', headerName: 'Price / month'},\n];\n\nexport const minAge = 0;\nexport const maxAge = 100;\nexport const userInfo = {\n      'email' : '', \n      'age': minAge, \n      'gender': ''\n};\nexport const errorInfo = {\n  'emailError': false,\n  'ageError': false\n}\n\nexport interface RowData {\n  rowInfo: {\n      pid?: number,\n      id?: string,\n      name?: string,\n      desc?: string,\n  }\n}\n\nexport interface UserInfo {\n  email: string,\n  age: number,\n  gender: string\n}\n\nexport interface ErrorValidation {\n  emailError: boolean,\n  ageError: boolean\n}\n\nexport function validEmail(emailId: string) {\n    let  validId : boolean;\n    let regexp = new RegExp('/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/');\n    validId = regexp.test(emailId);\n    console.log(emailId)\n    return emailId\n}"],"mappings":"AAAA,OAAO,MAAMA,IAAI,GAAG,CAChB;EAAEC,EAAE,EAAE,CAAN;EAASC,GAAG,EAAE,WAAd;EAA4BC,IAAI,EAAE,mBAAlC;EAAuDC,IAAI,EAAE,gIAA7D;EAA+LC,KAAK,EAAE;AAAtM,CADgB,EAEhB;EAAEJ,EAAE,EAAE,CAAN;EAASC,GAAG,EAAE,WAAd;EAA2BC,IAAI,EAAE,oBAAjC;EAAuDC,IAAI,EAAE,oKAA7D;EAAmOC,KAAK,EAAE;AAA1O,CAFgB,EAGhB;EAAEJ,EAAE,EAAE,CAAN;EAASC,GAAG,EAAE,WAAd;EAA4BC,IAAI,EAAE,gBAAlC;EAAoDC,IAAI,EAAE,sIAA1D;EAAkMC,KAAK,EAAE;AAAzM,CAHgB,CAAb;AAMP,OAAO,MAAMC,OAAO,GAAI,CACpB;EAAEC,KAAK,EAAE,KAAT;EAAgBC,UAAU,EAAE;AAA5B,CADoB,EAEpB;EAAED,KAAK,EAAE,MAAT;EAAiBC,UAAU,EAAE;AAA7B,CAFoB,EAGpB;EAAED,KAAK,EAAE,MAAT;EAAiBC,UAAU,EAAE;AAA7B,CAHoB,EAIpB;EAAED,KAAK,EAAE,OAAT;EAAkBC,UAAU,EAAE;AAA9B,CAJoB,CAAjB;AAOP,OAAO,MAAMC,MAAM,GAAG,CAAf;AACP,OAAO,MAAMC,MAAM,GAAG,GAAf;AACP,OAAO,MAAMC,QAAQ,GAAG;EAClB,SAAU,EADQ;EAElB,OAAOF,MAFW;EAGlB,UAAU;AAHQ,CAAjB;AAKP,OAAO,MAAMG,SAAS,GAAG;EACvB,cAAc,KADS;EAEvB,YAAY;AAFW,CAAlB;AAyBP,OAAO,SAASC,UAAT,CAAoBC,OAApB,EAAqC;EACxC,IAAKC,OAAL;EACA,IAAIC,MAAM,GAAG,IAAIC,MAAJ,CAAW,0JAAX,CAAb;EACAF,OAAO,GAAGC,MAAM,CAACE,IAAP,CAAYJ,OAAZ,CAAV;EACAK,OAAO,CAACC,GAAR,CAAYN,OAAZ;EACA,OAAOA,OAAP;AACH"},"metadata":{},"sourceType":"module"}